/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-11-10 10:50:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(9);
    _jspx_dependants.put("/WEB-INF/views/../views/layouts/footer1.jsp", Long.valueOf(1699579332638L));
    _jspx_dependants.put("jar:file:/C:/backend_workspace/04_projectdawin/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/project/WEB-INF/lib/spring-security-taglibs-5.0.7.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1532606274000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.0.7.RELEASE.jar", Long.valueOf(1693039928131L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.0.7.RELEASE.jar", Long.valueOf(1695082461823L));
    _jspx_dependants.put("jar:file:/C:/backend_workspace/04_projectdawin/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/project/WEB-INF/lib/spring-webmvc-5.0.7.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1528782246000L));
    _jspx_dependants.put("/WEB-INF/views/../views/layouts/header1.jsp", Long.valueOf(1699613022747L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1693039193032L));
    _jspx_dependants.put("jar:file:/C:/backend_workspace/04_projectdawin/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/project/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/backend_workspace/04_projectdawin/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <title>Alertravel</title>\r\n");
      out.write("    <meta\r\n");
      out.write("      name=\"viewport\"\r\n");
      out.write("      content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"\r\n");
      out.write("    />\r\n");
      out.write("    <!-- user-scalable 을 사용하지 않는 디바이스를 위해, maximun-scale/minimum-scale 설정을 하는 것입니다-->\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n");
      out.write("\r\n");
      out.write("    <!-- Open Graph (Facebook, Linkedin) -->\r\n");
      out.write("    <!-- https://ourcodeworld.com/public-media/articles/articleocw-56d1a6901b773.png -->\r\n");
      out.write("    <meta property=\"og:type\" content=\"website\" />\r\n");
      out.write("    <!-- https://ogp.me/#types -->\r\n");
      out.write("    <meta property=\"og:title\" content=\"Alertravel\" />\r\n");
      out.write("    <meta\r\n");
      out.write("      property=\"og:description\"\r\n");
      out.write("      content=\"여러분의 안전한 여행을 응원하는 Alertravel입니다.\"\r\n");
      out.write("    />\r\n");
      out.write("    <meta property=\"og:site_name\" content=\"Alertravel\" />\r\n");
      out.write("\r\n");
      out.write("    <!-- twitter card (Twitter) -->\r\n");
      out.write("    <!-- https://csharpcorner-mindcrackerinc.netdna-ssl.com/article/twitter-cards-implementation-with-websites/Images/summary_card_tweet.png -->\r\n");
      out.write("    <meta name=\"twitter:card\" content=\"summary\" />\r\n");
      out.write("    <!-- card 종류: summary, photo, player -->\r\n");
      out.write("    <meta name=\"twitter:title\" content=\"Alertravel\" />\r\n");
      out.write("    <meta\r\n");
      out.write("      name=\"twitter:description\"\r\n");
      out.write("      content=\"여러분의 안전한 여행을 응원하는 Alertravel입니다.\"\r\n");
      out.write("    />\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <!-- 일반적인 fabicon 설정 -->\r\n");
      out.write("    <link rel=\"icon\" href=\"img/alertravelicon.ico\" />\r\n");
      out.write("    <!-- 아이폰용 fabicon 설정 -->\r\n");
      out.write("    <link rel=\"apple-touch-icon\" href=\"img/alertravelicon.ico\" />\r\n");
      out.write("    <!-- 인터넷 익스플러오용 fabicon 설정-->\r\n");
      out.write("    <link rel=\"short icon\" type=\"image/x-icon\" href=\"img/alertravelicon.ico\" />\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/resources/css/normalize.css\" />\r\n");
      out.write("    <!-- https://fontawesome.com/start -->\r\n");
      out.write("    <script\r\n");
      out.write("      src=\"https://kit.fontawesome.com/f1def33959.js\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    ></script>\r\n");
      out.write("     <script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Spoca Han Sans Neo: https://spoqa.github.io/spoqa-han-sans/ko-KR/ -->\r\n");
      out.write("    <link\r\n");
      out.write("      href=\"//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSansNeo.css\"\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      type=\"text/css\"\r\n");
      out.write("    />\r\n");
      out.write("    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/resources/css/style.css\" />\r\n");
      out.write("   \r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <header>\r\n");
      out.write("      <div class=\"inner\">\r\n");
      out.write("        <div class=\"head-container\">\r\n");
      out.write("          <div class=\"head-brand\">\r\n");
      out.write("            <a href=\"#\">Alertravel</a>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"head-blog\">\r\n");
      out.write("              여러분의 여행을 응원합니다.\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <!-- 메인 이미지 섹션 -->\r\n");
      out.write("    <section class=\"main\">\r\n");
      out.write("      <div class=\"main-container\">\r\n");
      out.write("        <div class=\"inner\">\r\n");
      out.write("          <div class=\"title-container\">\r\n");
      out.write("            <div class=\"title\">안전한 여행</div>\r\n");
      out.write("            <div class=\"message\">\r\n");
      out.write("              해외국가의 단계별 여행 경보를 알려드립니다.<br />\r\n");
      out.write("              여러분의 여행 발자취를<br />\r\n");
      out.write("              이곳에 남기어 같이 공유해주세요.<br />\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    <section>\r\n");
      out.write("      <div class=\"inner\">\r\n");
      out.write("        <div class=\"skill-container\">\r\n");
      out.write("          <div class=\"skill\">\r\n");
      out.write("            <i class=\"fas fa-info skill-icon\"></i>\r\n");
      out.write("            <div class=\"skill-title\">\r\n");
      out.write("              <div class=\"skill-name\">해외안전정보</div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"skill\">\r\n");
      out.write("            <i class=\"fas fa-comments skill-icon\"></i>\r\n");
      out.write("            <div class=\"skill-title\">\r\n");
      out.write("              <div class=\"skill-name\">소통마당</div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"skill\">\r\n");
      out.write("            <i class=\"fas fa-route skill-icon\"></i>\r\n");
      out.write("            <div class=\"skill-title\">\r\n");
      out.write("              <div class=\"skill-name\">편의기능</div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"skill\">\r\n");
      out.write("            <i class=\"fas fa-money-check skill-icon\"></i>\r\n");
      out.write("            <div class=\"skill-title\">\r\n");
      out.write("              <div class=\"skill-name\">후원하기</div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </section>");
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("	<div class=\"inner\">\r\n");
      out.write("		<div class=\"footer-message\">여러분의 안전한 여행을 늘 희망합니다.</div>\r\n");
      out.write("		<div class=\"footer-contact\">컨택: jeonsm6@gmail.com</div>\r\n");
      out.write("		<div class=\"footer-copyright\">Copyright 2023 © All rights\r\n");
      out.write("			reserved.</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</footer>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
